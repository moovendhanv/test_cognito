service: cognito-restore-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-south-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - batch:SubmitJob
          Resource: "*"

custom:
  namePrefix: ${self:service}-${sls:stage}
  ecrRepository:
    name: cognito-restore-${sls:stage}

functions:
  postDeploy:
    handler: postDeploy/submitJob.handler
    timeout: 30

resources:
  Resources:

    EcrRepository:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: ${self:custom.ecrRepository.name}

    BatchServiceRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: batch.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

    ComputeEnvironment:
      Type: AWS::Batch::ComputeEnvironment
      Properties:
        Type: MANAGED
        State: ENABLED
        ServiceRole: !GetAtt BatchServiceRole.Arn
        ComputeEnvironmentName: ${self:custom.namePrefix}-env
        ComputeResources:
          Type: FARGATE
          MaxvCpus: 4
          Subnets:
            - subnet-015798f0e09b6e5f2
            - subnet-085cfe7c007dec6cd      
            
          SecurityGroupIds:
            - sg-09c848d8090c82831

    JobQueue:
      Type: AWS::Batch::JobQueue
      Properties:
        JobQueueName: ${self:custom.namePrefix}-queue
        State: ENABLED
        Priority: 1
        ComputeEnvironmentOrder:
          - Order: 1
            ComputeEnvironment: !Ref ComputeEnvironment

    JobDefinition:
      Type: AWS::Batch::JobDefinition
      Properties:
        JobDefinitionName: ${self:custom.namePrefix}-job-def
        Type: container
        PlatformCapabilities: [FARGATE]
        ContainerProperties:
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${self:custom.ecrRepository.name}:latest"
          ExecutionRoleArn: !GetAtt BatchServiceRole.Arn
          ResourceRequirements:
            - Type: VCPU
              Value: "1"
            - Type: MEMORY
              Value: "2048"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /aws/batch/${self:custom.namePrefix}
              awslogs-region: ${self:provider.region}
              awslogs-stream-prefix: batch-log

    SubmitJobCustomResource:
      Type: Custom::SubmitJobCustomResource
      Properties:
        ServiceToken: !GetAtt PostDeployLambdaFunction.Arn
        JobQueue: !Ref JobQueue
        JobDefinition: !Ref JobDefinition
        JobName: "${self:custom.namePrefix}-initial-run"

